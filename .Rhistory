# Check out the help page for this dataset
help(GBSG2, package = "TH.data")
# Load the data
data(GBSG2, package = "TH.data")
data("GBSG2")
install.packages("GBSG2")
data("GBSG2")
install.packages("TH.data")
# Check out the help page for this dataset
help(GBSG2, package = "TH.data")
# Load the data
data(GBSG2, package = "TH.data")
summary(GBSG2)
time <- c(5, 6, 2, 4, 4)
event <- c(1, 0, 0, 1, 1)
library("survival")
Surv(time, event)
library("survminer")
install.packages("survminer")
# Count censored and uncensored data
num_cens <- table(GBSG2$cens == 1)
num_cens
# Create barplot of censored and uncensored data
barplot(num_cens)
# Use help() to look at cens
help(GBSG2, package = "TH.data")
sobj <- Surv(time = GBSG2$time, event = GBSG2$cens)
# Load the UnempDur data
data(Ecdat, package = "TH.data")
# Load the UnempDur data
data("Ecdat", package = "TH.data")
?survfit
# Create time and event data
time <- c(5, 6, 2, 4, 4)
event <- c(1, 0, 0, 1, 1)
# Compute KM estimate
km <- survfit(Surv(time = time, event = event) ~ 1)
km
str(km)
# Estimate the survivor function pretending that all censored observations are actual observations.
km_wrong <- survfit(Surv(name) ~ 1, data = dancedat)
# Estimate the survivor function from this dataset via kaplan-meier.
km <- survfit(Surv(time, obs_end) ~ 1, data = dancedat)
# Create dancedat data
dancedat <- data.frame(
name = c("Chris", "Martin", "Conny", "Desi", "Reni", "Phil",
"Flo", "Andrea", "Isaac", "Dayra", "Caspar"),
time = c(20, 2, 14, 22, 3, 7, 4, 15, 25, 17, 12),
obs_end = c(1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0)
)
# Estimate the survivor function pretending that all censored observations are actual observations.
km_wrong <- survfit(Surv(name) ~ 1, data = dancedat)
# Estimate the survivor function from this dataset via kaplan-meier.
km <- survfit(Surv(time, obs_end) ~ 1, data = dancedat)
km
# Estimate the survivor function pretending that all censored observations are actual observations.
km_wrong <- survfit(Surv(time) ~ 1, data = dancedat)
# Estimate the survivor function from this dataset via kaplan-meier.
km <- survfit(Surv(time, obs_end) ~ 1, data = dancedat)
km_wrong
# Plot the two and compare
ggsurvplot_combine(list(correct = km, wrong = km_wrong))
# Visualization
library(survminer)
# Plot the two and compare
ggsurvplot_combine(list(correct = km, wrong = km_wrong))
str(GBGS2)
head(GBGS2)
GBGS2
km <- survfit(Surv(time, event = cens), data = GBSG2)
# plot of the Kaplan-Meier estimate
ggsurvplot(km)
data(GBSG2, package = "TH.data")
# Compute Cox model
library(survival)
cxmod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
# Imaginary patients
newdat <- expand.grid(
horTh = levels(GBSG2$horTh),
tsize = quantile(GBSG2$tsize, probs = c(0.25, 0.5, 0.75))
)
data.frame(newdat) <- letters[1:6]
rownames(newdat) <- letters[1:6]
newdat
# Compute survival curves
cxsf <- survfit(cxmod, data = GBSG2, newdata = newdat, conf.type = "none")
head(cxsf$surv)
?surv_summary
# Compute data.frame needed for plotting
library(survminer)
surv_cxmod0 <- surv_summary(cxsf)
surv_cxmod0 <- surv_summary(dta.frame(cxsf))
surv_cxmod0 <- surv_summary(data.frame(cxsf))
surv_cxmod0 <- surv_summary(cxsf)
cxmod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
# Imaginary patients
newdat <- expand.grid(
horTh = levels(GBSG2$horTh),
tsize = quantile(GBSG2$tsize, probs = c(0.25, 0.5, 0.75))
)
rownames(newdat) <- letters[1:6]
# Compute survival curves
cxsf <- survfit(cxmod, data = GBSG2, newdata = newdat, conf.type = "none")
head(cxsf$surv)
# Compute data.frame needed for plotting
library(survminer)
surv_cxmod0 <- surv_summary(cxsf)
cxmod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
# Imaginary patients
newdat <- expand.grid(
horTh = levels(GBSG2$horTh),
tsize = quantile(GBSG2$tsize, probs = c(0.25, 0.5, 0.75))
)
rownames(newdat) <- letters[1:6]
# Compute survival curves
cxsf <- survfit(cxmod, data = GBSG2, newdata = newdat, conf.type = "none")
head(cxsf$surv)
# Compute data.frame needed for plotting
library(survminer)
surv_cxmod0 <- surv_summary(cxsf)
cxsf
surv_summary(cxsf)
surv_cxmod0 <- surv_summary(cxsf)
data(GBSG2, package = "TH.data")
# Compute Cox model
library(survival)
cxmod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
# Imaginary patients
newdat <- expand.grid(
horTh = levels(GBSG2$horTh),
tsize = quantile(GBSG2$tsize, probs = c(0.25, 0.5, 0.75))
)
rownames(newdat) <- letters[1:6]
# Compute survival curves
cxsf <- survfit(cxmod, data = GBSG2, newdata = newdat, conf.type = "none")
head(cxsf$surv)
# Compute data.frame needed for plotting
library(survminer)
surv_cxmod0 <- surv_summary(cxsf)
# Compute survival curves
cxsf <- survfit(cxmod, data = GBSG2, newdata = newdat)
head(cxsf$surv)
surv_cxmod0 <- surv_summary(cxsf)
head(surv_cxmod0)
# Get a character vector of patient letters (patient IDs)
pid <- as.character(surv_cxmod0$strata)
# Multiple of the rows in newdat so that it fits with surv_cxmod0
m_newdat <- newdat[pid, ]
# Add patient info to data.frame
surv_cxmod <- cbind(surv_cxmod0, m_newdat)
head(surv_cxmod)
# Plot
ggsurvplot(surv_cxmod, linetype = "horTh", color = "tsize",
legend.title = NULL, censor = FALSE)
ggsurvplot_df(surv_cxmod, linetype = "horTh", color = "tsize",
legend.title = NULL, censor = FALSE)
surv_cxmod0
head(surv_cxmod0)
data(lung)
head(lung)
# Compute Cox model and survival curves
library(survival)
head(lung)
str(lung)
new_lung <- data.frame(cbind(60, 70, 80, 90))
new_lung
seq(60, 90, by = 10)
data.frame(seq(60, 90, by = 10))
str(data.frame(seq(60, 90, by = 10)))
newdat
cxmod <- coxph(Surv(time, status) ~ ph.ecog, data = lung)
new_lung <- data.frame(cbind(60, 70, 80, 90))
cxsf <- survfit(cxmod, data = lung, newdata = new_lung)
head(lung)
cxmod <- coxph(Surv(time, status) ~ "ph.ecog", data = lung)
new_lung <- data.frame(cbind(60, 70, 80, 90))
cxsf <- survfit(cxmod, data = lung, newdata = new_lung)
c(60, 70, 80, 90)
data.frame(c(60, 70, 80, 90))
cxmod <- coxph(Surv(time, status) ~ ph.karno, data = lung)
new_lung <- data.frame(cbind(60, 70, 80, 90))
cxsf <- survfit(cxmod, data = lung, newdata = new_lung)
cxmod <- coxph(Surv(time, status) ~ ph.karno, data = lung)
new_lung <- data.frame(ph.karno = c(60, 70, 80, 90))
cxsf <- survfit(cxmod, data = lung, newdata = new_lung)
new_lung
library(survminer)
surv_cxmod0 <- surv_summary(cxsf)
pid <- as.character(surv_cxmod0$strata)
# Duplicate rows in newdat to fit with surv_cxmod0 and add them in
m_newdat <- new_lung[pid, , drop = FALSE]
surv_cxmod <- cbind(surv_cxmod0, m_newdat)
# Plot
ggsurvplot_df(surv_cxmod, color = "ph.karno", legend.title = NULL, censor = FALSE)
km <- survfit(Surv(time, status) ~ ph.karno, data = lung)
# Plot Kaplan-Meier curve
ggsurvplot(km, conf.int = FALSE)
# Plot Cox model survival
ggsurvplot_df(surv_cxmod, censor = FALSE)
